version: 2.1

commands:
  export_image_tag_variables:
    steps:
      - run:
          name: Format Image Tags
          command: |
            echo 'export ECR_REGISTRY_PREFIX="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/"' >> $BASH_ENV
            echo 'export WEBSERVER_VERSION_TAG_SUFFIX=":commit-${CIRCLE_SHA1}"' >> $BASH_ENV
            echo 'export APPLICATION_VERSION_TAG_SUFFIX=":commit-${CIRCLE_SHA1}"' >> $BASH_ENV

jobs:
  test:
    parameters:
      should_publish_images:
        type: boolean
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.6
      - when:
          condition: << parameters.should_publish_images >>
          steps:
            - run:
                name: Check Required Envionment Variables
                command: |
                  set -e
                  test -z "${AWS_ACCOUNT_ID}" && ! echo "AWS_ACCOUNT_ID environment variable not set"
                  test -z "${AWS_REGION}" && ! echo "AWS_REGION environment variable not set"
            - export_image_tag_variables
            - run:
                name: Build Images
                command: |
                  DOCKER_BUILDKIT=1 docker build -t "${ECR_REGISTRY_PREFIX}surf-test-2/laravel${APPLICATION_VERSION_TAG_SUFFIX}" --ssh default --progress plain .
                  DOCKER_BUILDKIT=1 docker build -t laravel:test --ssh default --progress plain --build-arg "BASE_IMAGE=${ECR_REGISTRY_PREFIX}surf-test-2/laravel${APPLICATION_VERSION_TAG_SUFFIX}" .circleci/
                  docker build -t "${ECR_REGISTRY_PREFIX}surf-test-2/webserver${WEBSERVER_VERSION_TAG_SUFFIX}" .docker/nginx
      - unless:
          condition: << parameters.should_publish_images >>
          steps:
            - run:
                name: Build Images
                command: |
                  DOCKER_BUILDKIT=1 docker build -t laravel-base --ssh default --progress plain .
                  DOCKER_BUILDKIT=1 docker build -t laravel:test --ssh default --progress plain --build-arg BASE_IMAGE=laravel-base .circleci/
      - run:
          name: Check Code Style and Run Tests
          command: |
            docker-compose -f .circleci/docker-compose.ci.yml run --rm --entrypoint bash laravel -c "
              set -e
              cp .env.example .env
              php artisan key:generate --force
              (test -f ".php-cs-fixer.dist.php" && ./vendor/bin/php-cs-fixer fix --dry-run) || echo "Code Style config not found"
              curl \${DB_HOST}:\${DB_PORT} --http0.9 --retry-connrefused --retry 30 --output /dev/null --silent
              php artisan migrate --force
              ./vendor/bin/phpunit
            "
      - when:
          condition: << parameters.should_publish_images >>
          steps:
            - run: # todo: add AWS ECR orb, login, push image
                name: Publish Images
                command: echo "ToDo"
  deploy:
    docker:
      - image: cimg/base:2021.04
    steps:
      - run:
          name: Check Required Envionment Variables
          command: |
            set -e
            test -z "${AWS_ACCOUNT_ID}" && ! echo "AWS_ACCOUNT_ID environment variable not set"
            test -z "${AWS_REGION}" && ! echo "AWS_REGION environment variable not set"
            test -z "${AWS_ACCESS_KEY_ID}" && ! echo "AWS_ACCESS_KEY_ID environment variable not set"
            test -z "${AWS_SECRET_ACCESS_KEY}" && ! echo "AWS_SECRET_ACCESS_KEY environment variable not set"
      - export_image_tag_variables
      - run: # todo: add AWS CLI orb, call aws cloudformation deploy
          name: Deploy CloudFormation Stack
          command: echo "ToDo"

workflows:
  version: 2
  test-workflow:
    when:
      and:
        - not:
            equal: [ main, << pipeline.git.branch >> ]
        - not:
            equal: [ stage, << pipeline.git.branch >> ]
    jobs:
      - test:
          should_publish_images: false
  deploy-workflow:
    when:
      or:
        - equal: [ main, << pipeline.git.branch >> ]
        - equal: [ stage, << pipeline.git.branch >> ]
    jobs:
      - test:
          should_publish_images: true
      - deploy:
          requires:
            - test
